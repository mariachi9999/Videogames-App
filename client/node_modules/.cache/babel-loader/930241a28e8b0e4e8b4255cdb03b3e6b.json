{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\PI\\\\PI-SoyHenry\\\\client\\\\src\\\\components\\\\FilterBox\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from \"./FilterBox.module.css\";\nimport { filterGenres, filterSource } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterBox = props => {\n  _s();\n\n  const genresOpt = useSelector(store => store.genres);\n  const sourceOpt = useSelector(store => store.source);\n  const [state, setState] = useState({\n    genres: \"\",\n    source: \"\"\n  });\n\n  const handleClick = event => {\n    if (event.target.attributes[1].value === \"genre\") {\n      let newGenres = \"\";\n      state.genres.includes(`${event.target.value}`) === true ? newGenres = state.genres : newGenres = state.genres.concat(`${event.target.value},`);\n      setState({ ...state,\n        genres: newGenres\n      });\n    }\n\n    if (event.target.attributes[1].value === \"source\") {\n      console.log(\"entro a source\");\n      let newSource = \"\";\n      state.source.includes(`${event.target.value}`) === true ? newSource = state.source : newSource = state.source.concat(`${event.target.value},`);\n      setState({ ...state,\n        source: newSource\n      });\n    }\n  };\n\n  const handleCross = event => {\n    if (event.target.attributes[1].value === \"genre\") {\n      let newGenres = state.genres.split(\",\").filter(g => g !== event.target.value).join();\n      setState({ ...state,\n        genres: newGenres\n      });\n    }\n\n    if (event.target.attributes[1].value === \"source\") {\n      let newSource = state.source.split(\",\").filter(s => s !== event.target.value).join();\n      setState({ ...state,\n        source: newSource\n      });\n    }\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(filterGenres(state.genres)), [state.genres]);\n  useEffect(() => dispatch(filterSource(state.source)), [state.source]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"FilterBox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.genresContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: \"Genres:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genres\",\n        value: state.genres,\n        size: \"5\",\n        className: styles.genresOpt,\n        children: genresOpt && genresOpt.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre,\n          onClick: () => handleClick,\n          name: \"genre\",\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterButton\",\n        children: state.genres && state.genres.split(\",\").filter(g => g.length > 0).map(g => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filterButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"filterButton\",\n            children: g\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCross,\n            name: \"genre\",\n            value: g,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.genresContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: \"Source:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"source\",\n        value: state.source,\n        size: \"2\",\n        className: styles.genresOpt,\n        children: sourceOpt && sourceOpt.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          onClick: () => handleClick,\n          name: \"source\",\n          children: source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterButton\",\n        children: state.source && state.source.split(\",\").filter(s => s.length > 0).map(s => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filterButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"filterButton\",\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filterButton\",\n            onClick: handleCross,\n            name: \"source\",\n            value: s,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilterBox, \"W7F8iHlZFoVq5KoiHBlmgGhuwm0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = FilterBox;\nexport default FilterBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterBox\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI/PI-SoyHenry/client/src/components/FilterBox/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styles","filterGenres","filterSource","FilterBox","props","genresOpt","store","genres","sourceOpt","source","state","setState","handleClick","event","target","attributes","value","newGenres","includes","concat","console","log","newSource","handleCross","split","filter","g","join","s","dispatch","genresContainer","label","map","genre","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styles from \"./FilterBox.module.css\"\r\nimport { filterGenres, filterSource } from \"../../store/actions\";\r\n\r\n\r\nexport const FilterBox = (props) => {\r\n    \r\n    const genresOpt = useSelector(store=>store.genres);\r\n    const sourceOpt = useSelector(store=>store.source);\r\n  \r\n    const [state,setState]= useState({\r\n        genres:\"\",\r\n        source:\"\"\r\n    })\r\n  \r\n    const handleClick = event =>{\r\n      if(event.target.attributes[1].value === \"genre\"){\r\n        let newGenres = \"\";\r\n        state.genres.includes(`${event.target.value}`) === true ?\r\n          newGenres = state.genres\r\n          :\r\n          newGenres = state.genres.concat(`${event.target.value},`)\r\n        setState({...state, genres: newGenres})\r\n      }\r\n  \r\n      if(event.target.attributes[1].value === \"source\"){\r\n        console.log(\"entro a source\")\r\n        let newSource = \"\";\r\n        state.source.includes(`${event.target.value}`) === true ?\r\n          newSource = state.source\r\n          :\r\n          newSource = state.source.concat(`${event.target.value},`) \r\n        setState({...state, source: newSource })\r\n      }\r\n    }\r\n\r\n    const handleCross = event =>{\r\n      if(event.target.attributes[1].value === \"genre\"){\r\n        let newGenres = state.genres.split(\",\").filter(g=>g !== event.target.value).join();\r\n        setState({...state, genres: newGenres })\r\n      }\r\n      if(event.target.attributes[1].value === \"source\"){\r\n        let newSource = state.source.split(\",\").filter(s=>s !== event.target.value).join();\r\n        setState({...state, source: newSource })\r\n      }\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>\r\n    dispatch(filterGenres(state.genres)),\r\n    [state.genres])\r\n    \r\n    useEffect(()=>\r\n    dispatch(filterSource(state.source)),\r\n    [state.source])\r\n\r\n    return (\r\n        <div>\r\n            <h4>FilterBox</h4>\r\n            <div id={styles.genresContainer}>\r\n                <label className={styles.label}>Genres:</label>\r\n                    <select \r\n                        id=\"genres\"\r\n                        value={state.genres}\r\n                        size=\"5\"\r\n                        className={styles.genresOpt}>\r\n                        {genresOpt && genresOpt.map(genre=>\r\n                        <option value={genre} onClick={()=>handleClick} name=\"genre\">{genre}</option>)}\r\n                    </select>\r\n                    <div className=\"filterButton\">\r\n                        {\r\n                          state.genres && state.genres.split(\",\").filter(g=>g.length>0).map(g=>\r\n                            <span className=\"filterButton\">\r\n                              <span className=\"filterButton\">{g}</span>\r\n                              <button className=\"filterButton\" onClick={handleCross} name=\"genre\" value={g}>X</button>\r\n                            </span>\r\n                            )\r\n                          }\r\n                    </div>\r\n            </div>\r\n            <div id={styles.genresContainer}>\r\n                <label className={styles.label}>Source:</label>\r\n                    <select \r\n                        id=\"source\"\r\n                        value={state.source}\r\n                        size=\"2\"\r\n                        className={styles.genresOpt}>\r\n                        {sourceOpt && sourceOpt.map(source=>\r\n                        <option value={source} onClick={()=>handleClick} name=\"source\">{source}</option>)}\r\n                    </select>\r\n                    <div className=\"filterButton\">\r\n                        {\r\n                          state.source && state.source.split(\",\").filter(s=>s.length>0).map(s=>\r\n                            <span className=\"filterButton\">\r\n                              <span className=\"filterButton\">{s}</span>\r\n                              <button className=\"filterButton\" onClick={handleCross} name=\"source\" value={s}>X</button>\r\n                            </span>\r\n                            )\r\n                          }\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterBox;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
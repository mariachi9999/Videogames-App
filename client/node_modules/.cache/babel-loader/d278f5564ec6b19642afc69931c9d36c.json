{"ast":null,"code":"const initialState = {\n  gamesLoaded: [],\n  gamesSearched: [],\n  gameDetail: {},\n  filteredGenres: [],\n  genres: [],\n  platforms: [],\n  source: [\"api\", \"local\"],\n  filteredSources: [],\n  alphabetical: \"\",\n  rating: \"\"\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_VIDEOGAMES':\n      return { ...state,\n        gamesLoaded: action.payload.data\n      };\n\n    case 'GET_INFO':\n      const genres = action.payload.genre.map(genre => genre.name);\n      const platforms = action.payload.platforms;\n      return { ...state,\n        genres: genres,\n        platforms: platforms\n      };\n\n    case 'SEARCH_VIDEOGAMES':\n      return { ...state,\n        gamesSearched: action.payload\n      };\n\n    case 'GET_VIDEOGAME_DETAIL':\n      return { ...state,\n        gameDetail: action.payload.data\n      };\n\n    case 'ADD_GENRE':\n      return { ...state,\n        filteredGenres: state.filteredGenres.concat(action.payload)\n      };\n\n    case 'ADD_SOURCE':\n      return { ...state,\n        filteredSources: state.filteredSources.concat(action.payload)\n      };\n\n    case 'REMOVE_GENRE':\n      return { ...state,\n        filteredGenres: state.filteredGenres.filter(genre => genre !== action.payload)\n      };\n\n    case 'REMOVE_SOURCE':\n      return { ...state,\n        filteredSources: state.filteredSources.filter(source => source !== action.payload)\n      };\n\n    case 'ORDER_ALPHABETICAL':\n      return { ...state,\n        alphabetical: action.payload,\n        rating: \"\"\n      };\n\n    case 'ORDER_RATING':\n      return { ...state,\n        rating: action.payload,\n        alphabetical: \"\"\n      };\n\n    case 'CLEAN_VIDEOGAME_DETAIL':\n      return { ...state,\n        gameDetail: {}\n      };\n\n    case 'CLEAN_GAMES_SEARCHED':\n      return { ...state,\n        gamesSearched: []\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/PI/PI-SoyHenry/client/src/store/reducer/index.js"],"names":["initialState","gamesLoaded","gamesSearched","gameDetail","filteredGenres","genres","platforms","source","filteredSources","alphabetical","rating","rootReducer","state","action","type","payload","data","genre","map","name","concat","filter"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,aAAa,EAAE,EAFE;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,cAAc,EAAE,EAJC;AAKjBC,EAAAA,MAAM,EAAE,EALS;AAMjBC,EAAAA,SAAS,EAAE,EANM;AAOjBC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAO,OAAP,CAPS;AAQjBC,EAAAA,eAAe,EAAE,EARA;AASjBC,EAAAA,YAAY,EAAE,EATG;AAUjBC,EAAAA,MAAM,EAAE;AAVS,CAArB;;AAaA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACZ,YAAP,EAAoBa,MAApB,KAA+B;AAE/C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,gBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHX,QAAAA,WAAW,EAAEY,MAAM,CAACE,OAAP,CAAeC;AAFzB,OAAP;;AAIJ,SAAK,UAAL;AACI,YAAMX,MAAM,GAAGQ,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBC,GAArB,CAAyBD,KAAK,IAAEA,KAAK,CAACE,IAAtC,CAAf;AACA,YAAMb,SAAS,GAAGO,MAAM,CAACE,OAAP,CAAeT,SAAjC;AACA,aAAO,EACH,GAAGM,KADA;AAEHP,QAAAA,MAAM,EAAEA,MAFL;AAGHC,QAAAA,SAAS,EAAEA;AAHR,OAAP;;AAKJ,SAAK,mBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHV,QAAAA,aAAa,EAAEW,MAAM,CAACE;AAFnB,OAAP;;AAIJ,SAAK,sBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHT,QAAAA,UAAU,EAAEU,MAAM,CAACE,OAAP,CAAeC;AAFxB,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHR,QAAAA,cAAc,EAAEQ,KAAK,CAACR,cAAN,CAAqBgB,MAArB,CAA4BP,MAAM,CAACE,OAAnC;AAFb,OAAP;;AAIJ,SAAK,YAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,eAAe,EAAEI,KAAK,CAACJ,eAAN,CAAsBY,MAAtB,CAA6BP,MAAM,CAACE,OAApC;AAFd,OAAP;;AAIJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHR,QAAAA,cAAc,EAAEQ,KAAK,CAACR,cAAN,CAAqBiB,MAArB,CAA4BJ,KAAK,IAAEA,KAAK,KAAKJ,MAAM,CAACE,OAApD;AAFb,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,eAAe,EAAEI,KAAK,CAACJ,eAAN,CAAsBa,MAAtB,CAA6Bd,MAAM,IAAEA,MAAM,KAAKM,MAAM,CAACE,OAAvD;AAFd,OAAP;;AAIJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,YAAY,EAAEI,MAAM,CAACE,OAFlB;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFZ;AAGHN,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAKJ,SAAK,wBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHT,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAK,sBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHV,QAAAA,aAAa,EAAE;AAFZ,OAAP;;AAIJ;AACI,aAAO,EACH,GAAGU;AADA,OAAP;AApER;AAwEH,CA1ED;;AA4EA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    gamesLoaded: [],\r\n    gamesSearched: [],\r\n    gameDetail: {},\r\n    filteredGenres: [],\r\n    genres: [],\r\n    platforms: [],\r\n    source: [\"api\",\"local\"],\r\n    filteredSources: [],\r\n    alphabetical: \"\",\r\n    rating: \"\"\r\n};\r\n\r\nconst rootReducer = (state=initialState,action) => {\r\n   \r\n    switch(action.type){\r\n\r\n        case 'GET_VIDEOGAMES':\r\n            return {\r\n                ...state,\r\n                gamesLoaded: action.payload.data\r\n            }\r\n        case 'GET_INFO':\r\n            const genres = action.payload.genre.map(genre=>genre.name);\r\n            const platforms = action.payload.platforms;\r\n            return {\r\n                ...state,\r\n                genres: genres,\r\n                platforms: platforms\r\n            }\r\n        case 'SEARCH_VIDEOGAMES':\r\n            return {\r\n                ...state,\r\n                gamesSearched: action.payload\r\n            }\r\n        case 'GET_VIDEOGAME_DETAIL':\r\n            return {\r\n                ...state,\r\n                gameDetail: action.payload.data\r\n            }\r\n        case 'ADD_GENRE':\r\n            return {\r\n                ...state,\r\n                filteredGenres: state.filteredGenres.concat(action.payload)\r\n            }\r\n        case 'ADD_SOURCE':\r\n            return {\r\n                ...state,\r\n                filteredSources: state.filteredSources.concat(action.payload)\r\n            }\r\n        case 'REMOVE_GENRE':\r\n            return {\r\n                ...state,\r\n                filteredGenres: state.filteredGenres.filter(genre=>genre !== action.payload)\r\n            }\r\n        case 'REMOVE_SOURCE':\r\n            return {\r\n                ...state,\r\n                filteredSources: state.filteredSources.filter(source=>source !== action.payload)\r\n            }\r\n        case 'ORDER_ALPHABETICAL':\r\n            return {\r\n                ...state,\r\n                alphabetical: action.payload,\r\n                rating: \"\"\r\n            }\r\n        case 'ORDER_RATING':\r\n            return {\r\n                ...state,\r\n                rating: action.payload,\r\n                alphabetical: \"\"\r\n            }\r\n        case 'CLEAN_VIDEOGAME_DETAIL':\r\n            return {\r\n                ...state,\r\n                gameDetail: {}\r\n            }\r\n        case 'CLEAN_GAMES_SEARCHED':\r\n            return {\r\n                ...state,\r\n                gamesSearched: []\r\n            }                     \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}